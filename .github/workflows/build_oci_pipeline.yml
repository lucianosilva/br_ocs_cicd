# Nome do Workflow
name: Terraform OCI Pipeline

# Evento que irÃ¡ acionar a pipeline (actions)
on: 
  push:
    branches:
      - main

jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1

      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8

      - name: Write OCI Config File
        run: |
          ls -ltr
          ls -ltr .oci
          pwd

      - name: Define TF Global Variables
        run: |
          echo "export TF_VAR_user_ocid=${{secrets.OCI_USER_ID}}" >> ~/.bash_profile
          echo "export TF_VAR_fingerprint=${{secrets.OCI_FINGERPRINT}}" >> ~/.bash_profile
          echo "export TF_VAR_region=${{secrets.OCI_REGION}}" >> ~/.bash_profile
          echo "export TF_VAR_tenancy_ocid=${{secrets.OCI_TENANCY_ID}}" >> ~/.bash_profile
          echo "export TF_VAR_compartment_ocid=${{secrets.OCI_COMPARTMENT_ID}}" >> ~/.bash_profile
          echo "export TF_VAR_private_key_path=/home/runner/work/br_ocs_cicd/br_ocs_cicd/.oci/oci_api_key.pem" >> ~/.bash_profile
          echo "export TF_VAR_oci_username=${{secrets.OCI_USERNAME}}" >> ~/.bash_profile
          echo "export TF_VAR_oci_user_authtoken="${{secrets.OCI_USER_AUTHTOKEN}}"" >> ~/.bash_profile
          . ~/.bash_profile

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Validate
        id: validate
        run: terraform validate

      - name: Terraform Plan
        id: plan
        run: |
          terraform plan -out config.tfplan

      - name: Terraform Apply
        id: apply
        run: terraform apply config.tfplan -auto-approve